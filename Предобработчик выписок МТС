# для просчета KPI отдела холодных продаж нам был нужен алгоритм-обработчик выписок оператора сотовой связи (в нашем случае - МТС)
# итогом работы алгоритма становится:
  # если используется ежедневный алгоритм - количество исходящих звонков на уникальные номера с телефона сотрудника
  # если используется ежемесячный алгоритм - сводная таблица с количеством вызовов на укальные номера с телефона сотрудника
# алгоритм легко масштабировать под нужный тип выписки и количество сотрудников, в случае большого количества сотрудников - 
можно добавить тепловую карту для визуализации по активности/эффективности каждого сотрудника за день
# код автоматически убирает входящие вызовы, повторные вызовы, а так же смс и прочие уведомления, учитывая в своей работе только уникальные исходящие вызовы.
# исходная выписка выгружается с личного кабинета оператора связи в формате HTML, дополнительное редактирование ей не нужно



Алгоритм для расчетов "за день": 
______________________________________________________________________________
import pandas as pd
import datetime
import matplotlib.pyplot as plt

df = pd.read_html('/Users/artem/Downloads/ЛС277394263745_номер79160331018_с_25082022_по_25082022.html')
data = pd.DataFrame(df[0])
cols = ['temp', 'date', 'time',  'GMT', 'number', 'session_num', 'connection_type', 'unknown', 'costs', 'long', 'unnamed_1', 'index']
data.columns = cols
data = data.drop(['temp', 'GMT'], axis=1)
data = data.reset_index(drop=True)

for i in range(len(data['number'])):
    if str(data.loc[i, 'number']).__contains__('<--') == True:
        data = data.drop(index=i, axis=0)
data = data.reset_index(drop=True)

import re
pattern = re.compile('[a-zA-Z#*]')
for i in range(len(data['number'])):
    if pattern.match(str(data.loc[i, 'number'])):
        data = data.drop(index=i, axis=0)
data = data.reset_index(drop=True)

print('Количество звонков за', data['date'][5],':', len(data.query('long > "0:05"')['number'].unique().tolist()))

>> вывод: 
Количество звонков за 25.08.2022 : 62

______________________________________________________________________________
Алгоритм для расчетов "за месяц": 
______________________________________________________________________________

import pandas as pd
import datetime
import matplotlib.pyplot as plt
import re

df = pd.read_html('/Users/artem/Downloads/ЛС277394263745_номер79160331018_с_01082022_по_26082022.html')
data = pd.DataFrame(df[0])
cols = ['temp', 'date', 'time',  'GMT', 'number', 'session_num', 'connection_type', 'unknown', 'costs', 'long', 'unnamed_1', 'index']
data.columns = cols
data = data.drop(['temp', 'GMT'], axis=1)
data = data.reset_index(drop=True)

for i in range(len(data['number'])):
    if str(data.loc[i, 'number']).__contains__('<--') == True:
        data = data.drop(index=i, axis=0)
data = data.reset_index(drop=True)

pattern = re.compile('[a-zA-Z#*]')
for i in range(len(data['number'])):
    if pattern.match(str(data.loc[i, 'number'])):
        data = data.drop(index=i, axis=0)
data = data.reset_index(drop=True)

data['time'] = pd.to_datetime(data['time'], format='%H:%M:%S')
data['hour'] = data['time'].dt.hour
data['time'] = data['time'].dt.time
data['date'] = pd.to_datetime(data['date'], format='%d.%m.%Y')

df = data.copy()

correct_calls = []

correct_data = df['date'].unique()
for i in range(len(list(df['date'].unique()))):
    correct_calls.append(df.loc[(df.loc[:, 'long'] > "0:05") & (df.loc[:, 'date'] == df['date'].unique()[i])]['number'].count())

d = {'date': correct_data, 'calls': correct_calls}

idx = []
for i in range(len(list(df['date'].unique()))):
    idx.append(i)
    
correct_data = pd.DataFrame(data=d, index=idx)   
print(correct_data)

>> вывод: 

date	calls
0	2022-08-15	124
1	2022-08-16	68
2	2022-08-17	124
3	2022-08-18	131
4	2022-08-19	73
5	2022-08-22	132
6	2022-08-23	130
7	2022-08-24	132
8	2022-08-25	62
9	2022-08-26	1
